@model Post

<main id="site__main" class="2xl:ml-[--w-side]  xl:ml-[--w-side-sm] p-2.5 h-[calc(100vh-var(--m-top))] mt-[--m-top]">
    <div class="w-full h-full" id="js-oversized">
        <div class="w-full h-full " id="posts-container">
            <partial name="Home/_Post" 
                model="Model"
                view-data='new ViewDataDictionary(ViewData) { { "ShowAllComment", true } }' />
        </div>
    </div>
</main>

<partial name="Home/_PostDeleteConfirm" />

<script>
      // Handle when delete post - comfirm dialog
    function openPostDeleteConfirmation(postId, button) {
        // Lấy dropdown gần nhất với nút vừa click
        const dropdown = button.closest('.uk-dropdown');
        if (dropdown) {
            UIkit.dropdown(dropdown).hide();
        }
        // Gán postId vào form modal
        document.getElementById('deleteConfirmationPostId').value = postId;

        // Hiện modal xác nhận xóa
        UIkit.modal('#postDeleteDialog').show();
    }

    document.addEventListener('DOMContentLoaded', function () {

        // HANDLE WHEN LIKE AND FAVORITE POST
        document.getElementById('posts-container').addEventListener('click', function (event) {

            const button = event.target.closest('.like-button, .favorite-button');
            if (button) {
                event.preventDefault();

                var form = button.closest('form');
                var postId = form.querySelector('input[name="postId"]').value;
                var postContainer = document.getElementById('post-' + postId);

                fetch(form.action, {
                    method: 'POST',
                    body: new FormData(form),
                    headers: {}
                })
                    .then(response => response.text())
                    .then(html => {
                        postContainer.innerHTML = html;
                    })
                    .catch(error => console.error('Error: ', error));
            }
        })

        // HANDLE WHEN ADD AND REMOVE COMMENT
        document.getElementById('posts-container').addEventListener('submit', function (event) {
            var form = event.target;

            // Add comment
            if (form.classList.contains('add-comment-form')) {
                event.preventDefault();

                var postId = form.querySelector('input[name="postId"]').value;
                var textarea = document.getElementById('commentContent-' + postId);
                var content = textarea.value.trim();
                if (!content) {
                    alert('Bạn chưa nhập nội dung bình luận!');
                    textarea.focus();
                    return;
                }

                var postContainer = document.getElementById('post-' + postId);

                fetch(form.action, {
                    method: 'POST',
                    body: new FormData(form),
                })
                    .then(response => response.text())
                    .then(html => {
                        postContainer.innerHTML = html;
                    })
                    .catch(error => console.error('Error: ', error));
            }

            // Remove comment
            if (form.classList.contains('remove-comment-form')) {
                event.preventDefault();

                var postId = form.querySelector('input[name="postId"]').value;
                var postContainer = document.getElementById('post-' + postId);

                const isConfirmed = confirm("Are you sure you want to delete this comment?");
                if (!isConfirmed) return;


                fetch(form.action, {
                    method: 'POST',
                    body: new FormData(form),
                })
                    .then(response => response.text())
                    .then(html => {
                        postContainer.innerHTML = html;
                    })
                    .catch(error => console.error('Error: ', error));
            }
        });
    })

</script>