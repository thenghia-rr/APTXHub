
@using static APTXHub.Data.Helpers.HashtagHelper
@model Post

@{
    int loggedInUserId = int.TryParse(User.FindFirstValue(ClaimTypes.NameIdentifier), out int result) ? result : 0;

    bool isFavorited = Model.Favorites.Any(n => n.UserId == loggedInUserId);
    bool isLiked = Model.Likes.Any(n => n.UserId == loggedInUserId);
    bool isPrivate = Model.IsPrivate == true && Model.UserId == loggedInUserId;
    bool isReported = Model.Reports.Any(n => n.UserId == loggedInUserId);

    string defaultUserPicture = "~/images/avatar/user.png";
    bool showAllComments = ViewData["ShowAllComment"] as bool? ?? false;
    bool showDetails = ViewData["ShowDetails"] as bool? ?? true;
}


<div id="post-@Model.Id" class="bg-white rounded-xl shadow-sm text-sm font-medium border1">

    @* Post heading *@
    <div class="flex gap-3 sm:p-4 p-2.5 text-sm font-medium">
        <a asp-controller="Users" asp-action="Details" asp-route-userId="@Model.UserId">
            <img src="@Url.Content(string.IsNullOrEmpty(Model.User.ProfilePictureUrl)
                ? defaultUserPicture
                : Model.User.ProfilePictureUrl)"
                 class="w-11 h-11 object-cover rounded-full" />
        </a>
        <div class="flex-1">
            <a asp-controller="Users" asp-action="Details" asp-route-userId="@Model.UserId">
                <h4 class="text-black text-15">@Model.User.FullName</h4>
                <div class="text-13 font-normal text-gray-500/80 mt-1 flex items-center" title="@Model.DateCreated.AddHours(7).ToString("dd/MM/yyyy HH:mm")">
                    <span class="mr-2">@Model.DateCreated.ToTimeAgo()</span>
                    @if (isPrivate)
                    {
                        <ion-icon name="lock-closed"></ion-icon>
                    }
                    else
                    {
                        <ion-icon name="earth-sharp"></ion-icon>
                    }
                </div>

            </a>
        </div>

        <div class="-mr-1">
            <button type="button" class="button-icon w-8 h-8"> <ion-icon class="text-xl" name="ellipsis-horizontal"></ion-icon> </button>
            <div class="w-[245px] post-options-dropdown" uk-dropdown="pos: bottom-right; animation: uk-animation-scale-up uk-transform-origin-top-right; animate-out: true; mode: click">

                @if (Model.UserId == loggedInUserId)
                {
                    <form asp-controller="Home" asp-action="TogglePostVisibility">
                        <input type="hidden" name="postId" value="@Model.Id" />
                        <button type="submit" class="hover:!bg-red-50 icon-link">
                            <ion-icon name="@(isPrivate ? "lock-open-outline" : "lock-closed-outline")"></ion-icon>  Set as @(isPrivate ? "public" : "private")
                        </button>
                    </form>
                    <hr>

                    <button type="button"
                            onclick="openPostDeleteConfirmation('@Model.Id', this)"
                            class="text-red-400 hover:!bg-red-50 delete-post-btn">
                        <ion-icon name="trash-bin-outline"></ion-icon> Delete Post
                    </button>
                    <hr />
                }
                else{

                    @if (!isReported)
                    {
                        <button type="button"
                                class="flex items-center gap-2 hover:!bg-red-50 icon-link w-full p-2"
                                onclick="openReportModal(@Model.Id)">
                            <ion-icon class="w-4 h-4 text-xl shrink-0" name="flag-outline"></ion-icon> Report
                        </button>

                        <partial name="Home/_PostReportConfirm" model="Model" />

                    }
                }
            </div>
        </div>
    </div>

    @* Post content *@
    <a href="/post/@Model.Id">
        <div class="sm:px-4 p-2.5 pt-0 w-full">
            <p class="font-normal text-15 mb-1">
                @Html.Raw(ContentFormatter.FormatHashtags(string.IsNullOrEmpty(Model.Content) ? "" : Model.Content))
            </p>
        </div>
    </a>


    @if (!string.IsNullOrEmpty(Model.ImageUrl))
    {
        <a href="/post/@Model.Id">
            <div class="relative w-full h-full sm:px-4">
                <img src="@Model.ImageUrl" class="sm:rounded-lg w-full h-full object-cover" />
            </div>
        </a>
    }

    @* Icons *@
    <div class="sm:p-4 p-2.5 flex items-center gap-4 text-xs font-semibold">

        @* Like *@
        <div class="flex items-center gap-1">
            <form asp-controller="Home" asp-action="TogglePostLike">
                @Html.AntiForgeryToken()
                <input type="hidden" name="postId" value="@Model.Id" />
                <button type="submit" class="button-icon like-button @(isLiked ? "text-red-500 bg-red-100" : "")">
                    <ion-icon class="text-lg"
                              name="@(isLiked ? "heart" : "heart-outline")"></ion-icon>
                </button>
            </form>
            <span class="like-count text-13">@Model.Likes.Count</span>
        </div>

        <div class="flex items-center gap-2">
            <a class="button-icon">
                <ion-icon class="text-lg" name="chatbubble-ellipses-outline"></ion-icon>
            </a>
            <a id="commentCount" class="text-13" href="javascript:void(0)">@Model.Comments.Count</a>
        </div>

        <div class="ml-auto"></div>

        @* Favorite *@
        <div class="flex items-center gap-0">

            <form asp-controller="Home" asp-action="TogglePostFavorite">
                <input type="hidden" name="postId" value="@Model.Id" />
                <button type="submit" class="button-icon favorite-button ml-auto @(isFavorited ? "text-orange-500 bt-orange-100":"")">
                    <ion-icon class="text-lg" name="@(isFavorited ? "bookmark":"bookmark-outline")"></ion-icon>
                </button>
            </form>
            @if (Model.Favorites.Count > 0)
            {
                <a href="#">@Model.Favorites.Count</a>
            }
        </div>
    </div>

    @* Add comment section *@
   @if(showDetails){
        <div>
            <div class="p-2.5 border-t border-gray-100 font-normal space-y-3 relative">
                @foreach (var comment in showAllComments
               ? Model.Comments.OrderByDescending(n => n.DateCreated)
               : Model.Comments.OrderByDescending(n => n.DateCreated).Take(2))
                {
                    <div class="flex items-start gap-3 relative">
                        <a asp-controller="Users" asp-action="Details" asp-route-userId="@comment.UserId">

                            <img src="@Url.Content(string.IsNullOrEmpty(comment.User.ProfilePictureUrl)
                            ? defaultUserPicture
                            : comment.User.ProfilePictureUrl)"
                                 class="w-10 h-10 object-cover rounded-full" />
                        </a>
                        <div class="flex-1">
                            <div class="flex justify-content-between">
                                <a asp-controller="Users" asp-action="Details" asp-route-userId="@comment.UserId"
                                   class="text-black font-medium inline-block flex-grow text-14">
                                    @comment.User.FullName
                                </a>
                                <small class="text-13" title="@comment.DateCreated.AddHours(7).ToString("dd/MM/yyyy HH:mm")">@comment.DateCreated.ToTimeAgo()</small>
                            </div>
                            <div class="flex items-center justify-between">
                                <p class="mt-0.5 text-14">
                                    @comment.Content
                                </p>

                                @if(comment.User.Id == loggedInUserId) {
                                    <form asp-controller="Home" asp-action="RemovePostComment" class="remove-comment-form"
                                          onsubmit="return confirm('Are you sure you want to delete this comment?');">
                                        <input type="hidden" name="commentId" value="@comment.Id" />
                                        <input type="hidden" name="postId" value="@comment.PostId" />
                                        <button type="submit" class="text-red-500 text-xs ml-2" title="Remove comment">
                                            <ion-icon name="trash-outline"></ion-icon>
                                        </button>
                                    </form>
                                }
                              

                            </div>
                        </div>
                    </div>
                }
                @if (Model.Comments.Count >= 3 && !showAllComments)
                {
                    <div class="p-1.5">
                        <a asp-controller="Home" asp-action="Details" asp-route-postId="@Model.Id">
                            Show all comments
                        </a>
                    </div>
                }
            </div>
            <form asp-controller="Home" asp-action="AddPostComment" class="add-comment-form">
                @Html.AntiForgeryToken()
                <div class="sm:px-4 sm:py-3 p-2.5 border-t border-gray-100 flex items-center gap-1">
                    <a asp-controller="Users" asp-action="Details" asp-route-userId="@Model.UserId">
                        <img src="@Url.Content(defaultUserPicture)" class="w-6 h-6 rounded-full" />
                    </a>
                    <input type="hidden" name="postId" value="@Model.Id" />
                    <div class="flex-1 relative overflow-hidden h-10">
                        <textarea id="commentContent-@Model.Id"
                                  name="content" placeholder="Add Comment...."
                                  rows="1"
                                  class="w-full resize-none !bg-transparent px-4 py-2 focus:!border-transparent focus:!ring-transparent"></textarea>
                    </div>
                    <button type="submit" class="text-sm rounded-full py-1.5 px-3.5 bg-secondery">Comment</button>
                </div>
            </form>

        </div>
   }


</div>

<script>
    function validateComment() {
        const content = document.getElementById("commentContent").value.trim();
        if (content === "") {
            alert("Bạn chưa nhập nội dung bình luận!");
            return false;
        }
        return true;
    }


    // Function to open the report modal
    function openReportModal(postId) {
        const modal = document.getElementById(`report-modal-${postId}`);
        if (modal) modal.classList.remove('hidden');
    }

    function closeReportModal(postId) {
        const modal = document.getElementById(`report-modal-${postId}`);
        if (modal) modal.classList.add('hidden');
    }

    function handleReportSubmit(form) {
        // Lấy reason người dùng nhập (nếu cần xác minh gì thêm)
        const reason = form.querySelector('textarea[name="reason"]').value.trim();

        if (!reason) {
            alert("Please enter a reason before submitting.");
            return false; // Ngăn submit nếu không có reason
        }

        alert("Report submitted successfully!");
        return true; // Cho phép form submit
    }
</script>
