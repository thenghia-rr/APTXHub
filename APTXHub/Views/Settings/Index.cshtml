@model User;

@{
    var defaultProfilePicture = "/images/avatar/user.png";
}

<main id="site__main" class="2xl:ml-[--w-side]  xl:ml-[--w-side-sm] p-2.5 h-[calc(100vh-var(--m-top))] mt-[--m-top] transition-colors duration-300">

    <div class="max-w-3xl mx-auto">
        <div class="box-dark-border  box relative rounded-lg shadow-md social-profile-container">
            <!-- Cover image section -->
            <form id="updateCoverForm" class="relative w-full h-64 rounded-t-lg overflow-hidden"
                  asp-controller="Settings" asp-action="UpdateCoverPicture" enctype="multipart/form-data">
                <label for="coverUpload" class="cursor-pointer block w-full h-full relative group">
                    <img id="coverPreview" src="@(string.IsNullOrEmpty(Model.CoverPictureUrl)
                        ? "/images/placeholders/post-placeholder.jpg"
                        : Model.CoverPictureUrl)"
                         class="object-cover w-full h-96 dark:bg-white" alt="Cover Image" />

                    <!-- Overlay on hover -->
                    <div class="absolute inset-0  bg-opacity-30 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity">
                        <label for="" class="p-0.5 rounded-full bg-slate-600 border-white absolute bottom-2 right-2 cursor-pointer">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-4 h-4 fill-white">
                                <path d="M12 9a3.75 3.75 0 100 7.5A3.75 3.75 0 0012 9z" />
                                <path fill-rule="evenodd" d="M9.344 3.071a49.52 49.52 0 015.312 0c.967.052 1.83.585 2.332 1.39l.821 1.317c.24.383.645.643 1.11.71.386.054.77.113 1.152.177 1.432.239 2.429 1.493 2.429 2.909V18a3 3 0 01-3 3h-15a3 3 0 01-3-3V9.574c0-1.416.997-2.67 2.429-2.909.382-.064.766-.123 1.151-.178a1.56 1.56 0 001.11-.71l.822-1.315a2.942 2.942 0 012.332-1.39zM6.75 12.75a5.25 5.25 0 1110.5 0 5.25 5.25 0 01-10.5 0zm12-1.5a.75.75 0 100-1.5.75.75 0 000 1.5z" clip-rule="evenodd" />
                            </svg>
                        </label>
                    </div> 


                    <input type="file" id="coverUpload" name="CoverImage" class="hidden" accept="image/png, image/jpeg" />
                </label>

                <!-- Optional: Submit button -->
                <div class="absolute top-4 right-4 z-10">
                    <button type="submit" id="saveCoverButton" class="hidden px-4 py-1 text-sm bg-blue-500 text-white rounded shadow">@Localizer["Save"]</button>
                </div>
            </form>


            @* profile picture section (avatar) *@
            <div class="flex items-center justify-between p-6 pb-4">

                <form id="updateProfilePictureForm" class="flex items-center gap-4 w-full" asp-controller="Settings" asp-action="UpdateProfilePicture" enctype="multipart/form-data">
                    <div class="profile-picture-wrapper relative w-32 h-32 shrink-0 ">
                        <label for="imageUpload" class="cursor-pointer">
                            <img id="imagePreview" src="@(string.IsNullOrEmpty(Model.ProfilePictureUrl) 
                                ? defaultProfilePicture
                                : Model.ProfilePictureUrl )" class="object-cover w-full h-full rounded-full" alt="Profile Picture Placeholder" />
                            <input type="file" id="imageUpload" name="ProfilePictureImage" class="hidden" accept="image/png, image/jpeg" />
                        </label>

                        <label for="imageUpload" class="p-0.5 rounded-full bg-slate-600 border-white absolute -bottom-2 -right-2 cursor-pointer">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-3 h-3 fill-white">
                                <path d="M12 9a3.75 3.75 0 100 7.5A3.75 3.75 0 0012 9z" />
                                <path fill-rule="evenodd" d="M9.344 3.071a49.52 49.52 0 015.312 0c.967.052 1.83.585 2.332 1.39l.821 1.317c.24.383.645.643 1.11.71.386.054.77.113 1.152.177 1.432.239 2.429 1.493 2.429 2.909V18a3 3 0 01-3 3h-15a3 3 0 01-3-3V9.574c0-1.416.997-2.67 2.429-2.909.382-.064.766-.123 1.151-.178a1.56 1.56 0 001.11-.71l.822-1.315a2.942 2.942 0 012.332-1.39zM6.75 12.75a5.25 5.25 0 1110.5 0 5.25 5.25 0 01-10.5 0zm12-1.5a.75.75 0 100-1.5.75.75 0 000 1.5z" clip-rule="evenodd" />
                            </svg>
                        </label>
                    </div>
                    <div class="ml-3">
                        <h3 class="text-xl font-semibold text-black dark:text-white">@Model.FullName</h3>
                        <p class="text-base text-blue-600 mt-1 font-normal">@Model.UserName </p>
                    </div>
                    <button type="submit" id="saveButton" class="hidden button bg-blue-500 text-white px-4 py-1 rounded ml-auto">Save</button>

                </form>
            </div>

            <div class="relative border-b">
                <nav class="nav__underline px-6 p-0 border-transparent -mb-px">
                    <ul class="uk-slider-items w-[calc(100%+10px)] !overflow-hidden"
                        uk-switcher="connect: #setting_tab; animation: uk-animation-slide-right-medium, uk-animation-slide-left-medium">
                        <li class="w-auto pr-2.5 ">
                            <a href="#" class="dark:text-white">
                                @Localizer["Updateprofile"]
                            </a>
                        </li>
                        <li class="w-auto pr-2.5"><a href="#" class="dark:text-white">@Localizer["Updatepassword"]</a></li>
                    </ul>
                </nav>
            </div>

            <div id="setting_tab" class="uk-switcher py-12 px-20 overflow-hidden text-black text-sm">
                <div>
                    <form asp-controller="Auth" asp-action="UpdateProfile">
                        <div class="space-y-6">
                            @if (TempData["UserProfileError"] != null)
                            {
                                <div class="text-center text-red-500 mb-4">@TempData["UserProfileError"]</div>
                            }  
                            @if (TempData["UserProfileSuccess"] != null)
                            {
                                <div class="text-center text-green-500 mb-4">@TempData["UserProfileSuccess"]</div>
                            }
                            <div class="flex items-center gap-10">
                                <label class="w-32 text-right dark:text-white">@Localizer["Full name"]</label>
                                <div class="flex-1">
                                    <input asp-for="FullName" type="text" name="fullName" placeholder="Enter your full name" class="w-full" />
                                </div>
                            </div>
                            <div class="flex items-center gap-10">
                                <label class="w-32 text-right dark:text-white">@Localizer["Username"]</label>
                                <div class="flex-1">
                                    <input readonly asp-for="UserName" type="text" name="username" placeholder="Enter your username" class="w-full" />
                                </div>
                            </div>
                            <div class="flex items-center gap-10">
                                <label class="w-32 text-right dark:text-white">@Localizer["Bio"]</label>
                                <div class="flex-1">
                                    <textarea asp-for="Bio" class="w-full" name="bio" rows="5" placeholder="Enter your bio"></textarea>
                                </div>
                            </div>
                            <div class="flex items-center gap-4 mt-16 pl-[10.5rem]">
                                @* <button class="text-14 button px-6 bg-secondery">Cancel</button> *@
                                <button type="submit" class="text-14 button px-10 bg-blue-500 text-white">@Localizer["Save"]</button>
                            </div>
                        </div>
                    </form>
                </div>
                <div>
                    <form asp-controller="Auth" asp-action="UpdatePassword">
                        <div class="space-y-6">
                            @if (TempData["PasswordError"] != null)
                            {
                                <div class="text-center text-red-500 mb-4">@TempData["PasswordError"]</div>
                            }

                            @if (TempData["PasswordSuccess"] != null)
                            {
                                <div class="text-center text-green-500 mb-4">@TempData["PasswordSuccess"]</div>

                            }
                            <div class="flex items-center gap-10">
                                <label class="w-32 text-right dark:text-white">@Localizer["Currentpassword"]</label>
                                @* <div class="flex-1"> *@
                                @*     <input type="password" name="currentPassword" placeholder="Enter yo  ur current password" class="w-full" /> *@
                                @* </div> *@
                                <div class="flex-1 relative">
                                    <input type="password" name="currentPassword" placeholder="Enter your current password" class="w-full pr-10 password-input" />
                                    <button type="button" class="absolute right-2 top-1/2 -translate-y-1/2 text-gray-500 toggle-password">
                                        <ion-icon name="eye-off-outline"></ion-icon>
                                    </button>
                                </div>

                            </div>
                            <div class="flex items-center gap-10">
                                <label class="w-32 text-right dark:text-white">@Localizer["Newpassword"]</label>
                                @* <div class="flex-1"> *@
                                @*     <input type="password" name="newPassword" placeholder="Enter your new password" value="" class="w-full" /> *@
                                @* </div> *@
                                <div class="flex-1 relative">
                                    <input type="password" name="newPassword" placeholder="Enter your new password" class="w-full pr-10 password-input" />
                                    <button type="button" class="absolute right-2 top-1/2 -translate-y-1/2 text-gray-500 toggle-password">
                                        <ion-icon name="eye-off-outline"></ion-icon>
                                    </button>
                                </div>

                            </div>
                            <div class="flex items-center gap-10">
                                <label class="w-32 text-right dark:text-white">@Localizer["Confirmpassword"]</label>
                                @* <div class="flex-1"> *@
                                @*     <input type="password" name="confirmPassword" placeholder="Confirm your new password" value="" class="w-full" /> *@
                                @* </div> *@
                                <div class="flex-1 relative">
                                    <input type="password" name="confirmPassword" placeholder="Confirm your new password" class="w-full pr-10 password-input" />
                                    <button type="button" class="absolute right-2 top-1/2 -translate-y-1/2 text-gray-500 toggle-password">
                                        <ion-icon name="eye-off-outline"></ion-icon>
                                    </button>
                                </div>

                            </div>
                            <div class="flex items-center gap-4 mt-16 pl-[10.5rem]">
                                @* <button class="text-14 button px-6 bg-red-400 ">Cancel</button> *@
                                <button type="submit" class="text-14 button px-10 bg-blue-500 text-white ">@Localizer["Save"]</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</main>

<script>

    // JavaScript to handle image upload Profile picture(avatar) and preview
    const imageUpload = document.getElementById('imageUpload');
    const imagePreview = document.getElementById('imagePreview');
    const saveButton = document.getElementById('saveButton');

    imageUpload.addEventListener('change', (event) => {
        const file = event.target.files[0];

        if (file) {
            const reader = new FileReader();
            reader.onload = (e) => {
                imagePreview.src = e.target.result;
                saveButton.classList.remove('hidden');
            }
            reader.readAsDataURL(file);
        } else {
            saveButton.classList.add('hidden');
        }
    });

    // Cover picture
    const coverUpload = document.getElementById('coverUpload');
    const coverPreview = document.getElementById('coverPreview');
    const saveCoverButton = document.getElementById('saveCoverButton');

    coverUpload.addEventListener('change', (event) => {
        const file = event.target.files[0];

        if (file) {
            const reader = new FileReader();
            reader.onload = (e) => {
                coverPreview.src = e.target.result;
                saveCoverButton.classList.remove('hidden');
            }
            reader.readAsDataURL(file);
        } else {
            saveCoverButton.classList.add('hidden');
        }
    });


     // Initialize the switcher based on TempData
     document.addEventListener('DOMContentLoaded', () => {
        const switcher = UIkit.switcher(document.querySelector('[uk-switcher]'));

        if ('@TempData["ActiveTab"]' === 'Password') {
            switcher.show(1);
        } else {
            switcher.show(0);
        }
    });

    // Toggle password show
     document.querySelectorAll('.toggle-password').forEach(button => {
        button.addEventListener('click', () => {
            const input = button.previousElementSibling;
            const icon = button.querySelector('ion-icon');
            if (input.type === 'password') {
                input.type = 'text';
                icon.name = 'eye-outline';
            } else {
                input.type = 'password';
                icon.name = 'eye-off-outline';
            }
        });
    });
</script>